@*
    Partial view som viser en liste over personer som er i samme rom som spilleren.
    Du kan skrive til de som er i samme rom som deg selv, og meldingene vises bare til de
    som er i samme rom.
    - Dobbelklikk på spiller aktiverer privat chat

    Skrevet av: Pål Gerrard Gaare-Skogsrud
    (med litt hjelp fra Andreas Dyrøy Jansson:)))))
*@

<style type="text/css">
    #chatdiv {
        height: 191px;
        width: 100%;
        background: #f1f2f3;
        padding: 0.4em;
        overflow-x: hidden;
        color: #000;
        font-family: "Courier New", Courier, monospace;
    }

        #chatdiv p {
            margin: 1px;
        }

        #chatdivprivate {
        width: 100%;
        background: #f1f2f3;
        padding: 0.4em;
        overflow-x: hidden;
        color: #000;
        font-family: "Courier New", Courier, monospace;
    }

    #element_to_pop_up {
        border: 2px solid #a1a1a1;
        padding: 10px 40px;
        background: #272b30;
        width: 800px;
        height: 500px;
        border-radius: 25px;
    }
</style>


<div style="width: 100%; height:400px;">
    <div style="float:left; width:45%;  padding:1em">
        <h4>Chat window</h4>
        <div id="chatdiv"></div>

    </div>
    <div style="float:right; width:20%; padding:1em">

        <h4>People in room</h4>
        <select id="list_of_users" multiple="multiple" style="width:100%" size="11" ondblclick="startPrivateChat()"></select>
        <!-- Hentet fra http://www.ajaxload.info -->
        <div id="loader"><img src='~/Content/275.gif' /></div>
    </div>

    <div style="float:right; width: 35%; padding:1em;">
        <h4>Enter message here</h4>
        <textarea class="fixedtextbox" id="message" title="Press enter to send message!" style="height: 191px"></textarea>
    </div>

    <div id="element_to_pop_up" style="display:none;">
        <h4>You are now chatting with <label id="lblUserName" style="color:#3293C0"></label></h4>
        <div id="chatdivprivate" style="height: 50%;">
        </div>
        <div>
            <h4>Enter message here</h4>
            <textarea class="fixedtextbox" id="privatemessage" title="Press enter to send message!" style="height: 20%"></textarea>
        </div>


    </div>
</div>

<link rel="stylesheet" type="text/css" href="~/Content/jquery-ui.css">
<script src="~/Scripts/jquery-ui.js"></script>
<!--Script referanser. -->
<!--Referanse til SignalR. Må være her selv om den blir lastet i layout.cshtml fila.
<script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>-->
<!--Reference the autogenerated SignalR hub script. Må også være her selv om denne også blir lastet i layout.cshtml filen.
<script src="~/signalr/hubs"></script>-->


<script>
    // Noen variabler
    var toUserId = "0";
    var username = "";
    var userId = "0";
    // Viser lasteanimasjonen
    showLoader();
    // Starter oppkobling.
    startChat();

    function startChat() {

        
        // Henter ut PlayerName til brukeren
        username = $.getJSON("/api/Chat/GetUsername").done(function (data) { username = data });
        // Henter ut Id til brukeren
        userId = $.getJSON("/api/Chat/GetUserId").done(function (data) { userId = data });
        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.chatHub;

        // Henter currentLocation fra hidden field
        var currentLocationID = $("#currentLocationId").val();
        // Setter initialverdi
        var oldLocationId = "-1";

        // Setter tooltip på input-feltene
        $(function () {
            $("#message").tooltip({
                track:true,
                show: {
                    effect: "slideDown",
                    delay: 250,
                    
                },
                hide: {
                effect: "explode",
                delay: 250
            }
                
            });
        });

        $(function () {
            $("#privatemessage").tooltip({
                track: true,
                show: {
                    effect: "slideDown",
                    delay: 250,

                },
                hide: {
                    effect: "explode",
                    delay: 250
                }

            });
        });
        
        // Callback som oppdaterer alle klienter dersom en bruker forlater rommet du står i.
        chat.client.removeLocationPlayer = function (_username, _userId) {
            console.log("mottar callback: " + _username + " gikk ut av rommet");
            remove_user_from_list_of_users(_userId);
            if (userId != _userId)
                addTextToStoryBox("<b>&laquo;" + _username + "&raquo;</b> left the room.");
        };

        // Callback som oppdaterer alle klienter dersom en bruker kommer inn i samme rom som du står i.
        chat.client.addLocationPlayer = function (_username, _userId) {
            console.log("mottar callback: " + _username + " kom inn i rommet");
            add_user_to_list_of_users(_username, _userId);
            if (userId != _userId)
                addTextToStoryBox("<b>&laquo;" + _username + "&raquo;</b> entered the room.");
        };


        // Callback som kalles når man mottar en privat melding
        chat.client.sendPrivateMessage = function (fromUserId, fromUserName, message) {
            console.log("mottar private massage " + message);
            receivePrivateChat(fromUserId, fromUserName, message);

        };

        // Mottar liste med alle tilkoblede spillere fra hub
        chat.client.setPlayersInRoom = function (_listOfUsers) {
            $("#list_of_users").empty();
            console.log("går inn i et nytt rom, henter brukere i rom");

            var strd = "brukers i rum: ";
            for (i = 0; i < _listOfUsers.length; i++) {
                
                console.log("bruker " + _listOfUsers[i].PlayerName + " har locId " + _listOfUsers[i].LocationId)

                if (_listOfUsers[i].LocationId == currentLocationID) {
                    strd += _listOfUsers[i].PlayerName + ", ";
                    add_user_to_list_of_users(_listOfUsers[i].PlayerName, _listOfUsers[i].PlayerId);
                }
                   
            }
            console.log(strd);
            showUsers();
        };

        // Callback som kalles når en bruker i samme rom sender en melding.
        chat.client.addNewMessageToPage = function (username, message) {
            console.log("Mottar melding: " + message);
            // Add the message to the page.
            addTextToChat(htmlEncode(username) + " says: " + htmlEncode(message) + "\n");
        };
        
        // change() på currentLocationId kalles når en bruker går fra et rom til et annet
        $("#currentLocationId").change(function () {
            // Viser lasteanimasjon
            showLoader();
            $.connection.hub.start().done(function () {

                // Tar vare på forrige posisjon
                oldLocationId = currentLocationID;
                // Setter den posisjonen
                currentLocationID = $("#currentLocationId").val();
                console.log("trying to connect.");
                // Kober til
                chat.server.connect(userId, currentLocationID);
                console.log("old: " + oldLocationId + ", new: " + currentLocationID);
                // Går inn i rommet
                chat.server.addLocationPlayer(currentLocationID, username);

                // Sjekker om spilleren faktisk har flyttet på seg
                if (oldLocationId != currentLocationID) {
                    chat.server.leaveLocation(oldLocationId);
                    chat.server.removeLocationPlayer(username, oldLocationId, userId);
                }
            });
        });

        // Kalles når brukeren trykker(slipper) enter i textfeltet
         $('#message').keyup(function (e) {
            // Kaller send()-metoden
            e = e || event;
            if (e.keyCode === 13 && !e.ctrlKey) {
                chat.server.send(currentLocationID, username, $('#message').val());
                // Sletter innholdet i textboxen
                $('#message').val('');
            }
         });

        // Samme som over, på privateChat
        $('#privatemessage').keyup(function (e) {
            e = e || event;
            if (e.keyCode === 13 && !e.ctrlKey) {
                console.log("touserid i keyup " + toUserId);
                var message = $('#privatemessage').val();
                var username = $("#lblUserName").text();
                chat.server.sendPrivateMessage(toUserId, message);
                $('#privatemessage').val('');
                // SKriver ut hvem spilleren "hvisket" til, for å holde oversikten over flere private samtaler.
                $('#chatdivprivate').append("You whisper to " + username + ": " + message + "<br/>" );
            }
        });
    }


    // "Vasker" input fra bruker før det sendes til hub
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html().replace(/\n/g, "<br />");
        return encodedValue;
    }

    // Funksjon som legger til meldingen bruker har skrevet i vinduet chatdiv. Ruller automatisk nedover til siste melding.
    function addTextToChat(text) {
        $("#chatdiv").append(/*"<p>" + */text /*+ "</p>"*/);
        $('#chatdiv').scrollTop($('#chatdiv')[0].scrollHeight);
    }

    // Funksjon som legger til brukere i listen over personer som er i samme rom som deg selv.
    function add_user_to_list_of_users(_userName, _userId) {
        console.log("conid i add" + _userId);
        if ($("#list_of_users option[value='" + _userId + "']").length == 0)
            if (_userId == userId) {
                // Viser hvem som er "deg selv" i listen
                $("<option>", { value: _userId, html: _userName + " [you]" }).appendTo("#list_of_users");
            }
            else {
                $("<option>", { value: _userId, html: _userName }).appendTo("#list_of_users");
            }

    }

    // Funksjon som fjerner brukere i listen over personer som er i samme rom som deg selv når de forlater rommet.
    function remove_user_from_list_of_users(_userId) {
        console.log("conid i remove" + _userId);
        $("#list_of_users option[value='" + _userId + "']").remove();
    }

    // Funksjon som viser lasteanimasjonen.
    function showLoader() {
        console.log("i showlo");
        $("#loader").show();
        $("#list_of_users").hide();
    }

    // Funksjon som viser liste over brukere i samme rom.
    function showUsers() {
        console.log("i showuser");
        $("#loader").hide();
        $("#list_of_users").show();
    }

    // Starter private chat med valgt spiller
    function startPrivateChat() {
        var e = document.getElementById("list_of_users");
        toUserId = e.options[e.selectedIndex].value;
        console.log("user id endres til " + toUserId);
                
        var user = $("#list_of_users option:selected").text();
        $("#lblUserName").text(user);

        // Man ikke starte privat chat med selg selv
        if (toUserId != userId) {
            // Finfin popup hentet fra http://dinbror.dk/bpopup/
            $('#element_to_pop_up').bPopup({
                fadeSpeed: 'slow', //can be a string ('slow'/'fast') or int
                followSpeed: 1500, //can be a string ('slow'/'fast') or int
                modalColor: '#3293C0',
                speed: 650,
                transition: 'slideDown',
                transitionClose: 'slideBack'
            });
        }

    }

    // Kalles når spiller mottar privat melding fra en annen spiller
    function receivePrivateChat(fromUserId, fromUserName, message) {
        toUserId = fromUserId;
        $('#element_to_pop_up').bPopup({
            fadeSpeed: 'slow', //can be a string ('slow'/'fast') or int
            followSpeed: 1500, //can be a string ('slow'/'fast') or int
            modalColor: '#3293C0',
            speed: 650,
            transition: 'slideDown',
            transitionClose: 'slideBack'
        });
        $("#lblUserName").text(fromUserName);
        $('#chatdivprivate').append(fromUserName
            + " whispers to you: " + message + "<br/>");
    }

</script>
