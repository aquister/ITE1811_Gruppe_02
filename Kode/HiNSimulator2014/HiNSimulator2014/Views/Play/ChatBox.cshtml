@*
    Partial view som viser en liste over personer som er i samme rom som spilleren.

    Støff tu du
    - Liste over spillere i samme rom - OK
    - Chat funksjon
    - Dobbelklikk på spiller aktiverer privat chat
*@

<style type="text/css">
    #chatdiv {
        height: 100px;
        width: 100%;
        background: #fbfbfb;
        border: 1px solid #ff0000;
        padding: 0.4em;
        overflow-x: hidden;
        color: #000;
        font-family: "Courier New", Courier, monospace;
    }

        #chatdiv p {
            margin: 1px;
        }
</style>


<div style="width: 100%; height:400px; border: solid 1px; margin-top:2em;">
    <div style="float:left; width:60%;  padding:1em">
        <h4>Chat window</h4>
        <div id="chatdiv"><br /></div>
        <br />
        <textarea class="fixedtextbox" id="message" ></textarea>
        <br />
        <input type="button" id="sendmessage" value="Send message" />
    </div>
    <div style="float:right; width:40%; padding:1em">
        <h4>People in this room</h4>
        <select id="list_of_users" multiple="multiple" style="width:100%" size="6"></select>
    </div>
</div>


    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>


<!--SignalR script to update the chat page and send messages.-->
<script>

    function add_user_to_list_of_users(userId, userName) {
        $("<option>", { value: userId, html: userName }).appendTo("#list_of_users");
    }

    $(function () {
        var username;
        // Get the user name and store it to prepend to messages.
        $.getJSON("/api/Chat/GetUsername")
        .done(function (data) {
            username = data;
        });
        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.chatTest;
        // Create a function that the hub can call back to display messages.
        chat.client.addNewMessageToPage = function (username, message) {
            // Add the message to the page.
            addTextToChat(htmlEncode(username) + " says:<br /> " + htmlEncode(message) + "\n");
            //document.getElementById("chatdiv").value += (htmlEncode(name) + ": " + htmlEncode(message) + "\n");
        };

        // Set initial focus to message input box.
        $('#message').focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#sendmessage').click(function () {
                // Call the Send method on the hub.
                chat.server.send(username, $('#message').val());
                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();
            });
        });
    });
    // This optional function html-encodes messages for display in the page. Legger til linjeskift når bruker taster enter tasten.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html().replace(/\n/g, "<br />");
        return encodedValue;
    }

    function addTextToChat(text) {
        $("#chatdiv").append("<p>" + text + "</p>");
        $('#chatdiv').scrollTop($('#chatdiv')[0].scrollHeight);
    }

    $(document).ready(function () {

        $.getJSON("/api/Chat/GetPlayersInCurrentLocation/")
            .done(function (data) {
                $.each(data, function (key, item) {
                    add_user_to_list_of_users(item.Id, item.PlayerName)
                });
            });
    });
</script>
