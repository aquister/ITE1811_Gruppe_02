@*
    Denne partial page viser liste over eget inventory og ting på samme lokasjon som spilleren.
    Her kan man også utføre forskjellige kommandoer på de tingene.

    Skrevet av: Alexander Lindquister
*@

<style type="text/css">
    .btn_cmd_thing {
        width: 100%;
        margin-bottom: 3px;
    }
</style>

<div style="float: right; height:100%; width:50%; padding:1em; border-left: solid 1px #989595;">
    <h4>THINGS IN ROOM</h4>
    <select id="location_things_list" style="width: 50%;" size="10"></select>
    <div style="width:45%; float: right;">
        <button id="btn_cmd_loc_thing_take" class="btn_cmd_thing">Take</button>
        <button id="btn_cmd_loc_thing_look" class="btn_cmd_thing">Look at</button>
        <button id="btn_cmd_loc_thing_write" class="btn_cmd_thing">Write on</button>
    </div>
</div>

<div style="height:100%; width:50%; padding:1em; border-right: solid 1px #989595;">
    <h4>INVENTORY</h4>
    <select id="inventory_things_list" style="width: 50%;" size="10"></select>
    <div style="width:45%; float: right;">
        <button id="btn_cmd_inv_thing_drop" class="btn_cmd_thing">Drop</button>
        <button id="btn_cmd_inv_thing_look" class="btn_cmd_thing">Look at</button>
        <button id="btn_cmd_inv_thing_write" class="btn_cmd_thing">Write on</button>
    </div>
</div>

<script type="text/javascript">

    function get_selected_location_thing() {
        return $("#location_things_list option:selected");
    }

    function get_selected_inventory_thing() {
        return $("#inventory_things_list option:selected");
    }

    function add_thing_to_location_list(thingID, thingName) {
        $("<option>", { value: thingID, html: thingName }).appendTo("#location_things_list");
    }

    function remove_thing_from_location_list(thingID) {
        $("#location_things_list option[value='" + thingID + "']").remove();
    }

    function add_thing_to_inventory_list(thingID, thingName) {
        $("<option>", { value: thingID, html: thingName }).appendTo("#inventory_things_list");
    }

    function remove_thing_from_inventory_list(thingID) {
        $("#inventory_things_list option[value='" + thingID + "']").remove();
    }

    // API CALL: CLEAR BOTH LISTS AND GET DATA FROM API
    function get_things_and_refresh_lists(locationID) {
        $("#location_things_list").empty();
        $("#inventory_things_list").empty();

        $.getJSON("/api/Things/GetThingsInCurrentLocation/" + locationID).done(function (data) {
            $("#location_things_list").empty();
            // On success, 'data' contains a list of things.
            $.each(data, function (key, item) {
                add_thing_to_location_list(item.ThingID, item.Name);
            });
        });
        
        $.getJSON("/api/Things/GetThingsInInventory/").done(function (data) {
            $("#inventory_things_list").empty();
            // On success, 'data' contains a list of things.
            $.each(data, function (key, item) {
                add_thing_to_inventory_list(item.ThingID, item.Name);
            });
        });
    }

    // API CALL: GET THING AND PRINT INFO TO STORYBOX
    function print_thing_info(thingID) {
        $.get("/api/Things/GetThing/" + thingID, function (thing) {
            addTextToStoryBox("<br />");
            addTextToStoryBox("<b>Name:</b> &laquo;" + thing.Name + "&raquo;");
            addTextToStoryBox("<b>Description:</b> &laquo;" + thing.Description + "&raquo;");
            if (thing.WrittenText != null) addTextToStoryBox("<b>Written on this:</b> &laquo;" + thing.WrittenText + "&raquo;");
            if (thing.KeyLevel != null) addTextToStoryBox("<b>Key Level:</b> " + thing.KeyLevel);
            addTextToStoryBox("<br />");
            if (thing.ImageID != null) display_thing_image(thing.ImageID);
        });
    }

    // API CALL: GET IMAGE AND UPDATE IMAGEBOX
    function display_thing_image(imageID) {
        $.get("/api/Image/GetImage/" + imageID, function (image) {
            updateImage(image);
        });
    }

    // API CALL: WRITE ON THING AFTER PROMTING USER FOR TEXT
    function write_on_thing(thingID) {
        $.get("/api/Things/GetThing/" + thingID, function (thing) {
            if (thing.PlayerWritable) {
                var newWrittenText = prompt("What to write on this thing?", thing.WrittenText);
                $.post("/api/Things/WriteOnThing/" + thingID, { "": newWrittenText });
            } else {
                addTextToStoryBox("<span style='color:red'>Can not write on &laquo;" + thing.Name + "&raquo;</span>");
            }
        });
    }

    // BUTTON HOOK: LOOK AT LOCATION THING
    $("#btn_cmd_loc_thing_look").click(function () {
        print_thing_info(get_selected_location_thing().val());
    });

    // BUTTON HOOK: LOOK AT INVENTORY THING
    $("#btn_cmd_inv_thing_look").click(function () {
        print_thing_info(get_selected_inventory_thing().val());
    });

    // BUTTON HOOK: WRITE ON LOCATION THING
    $("#btn_cmd_loc_thing_write").click(function () {
        write_on_thing(get_selected_location_thing().val());
    });

    // BUTTON HOOK: WRITE ON INVENTORY THING
    $("#btn_cmd_inv_thing_write").click(function () {
        write_on_thing(get_selected_inventory_thing().val());
    });

    $(function () {
        // THING HUB REFERENCE
        var thingHub = $.connection.thingHub;

        // THINGHUB CALLBACK: REMOVE LOCATION THING
        thingHub.client.removeLocationThing = function (thingID, thingName) {
            remove_thing_from_location_list(thingID);
            addTextToStoryBox("<b>&laquo;" + thingName + "&raquo;</b> was removed from this location.");
        };

        // THINGHUB CALLBACK: ADD LOCATION THING
        thingHub.client.addLocationThing = function (thingID, thingName) {
            add_thing_to_location_list(thingID, thingName);
            addTextToStoryBox("<b>&laquo;" + thingName + "&raquo;</b> was added to this location.");
        }

        var currentLocationId = "thing_loc_" + $("#currentLocationId").val();

        // Start connection to thingHub
        $.connection.hub.start().done(function () {

            // LOCATION CHANGE HOOK: UPDATE LISTS
            $("#currentLocationId").change(function () {
                thingHub.server.leaveLocation(currentLocationId);
                currentLocationId = "thing_loc_" + $("#currentLocationId").val();
                thingHub.server.joinLocation(currentLocationId);
                get_things_and_refresh_lists($("#currentLocationId").val());
            });

            // BUTTON HOOK: TAKE LOCATION ITEM
            $("#btn_cmd_loc_thing_take").click(function () {
                // Send request om å ta ting. Om vi får true tilbake, broadcaster vi det til andre i rommet og legger til inventory-listen
                $.get("/api/Things/TakeThing/" + get_selected_location_thing().val(), function (data) {
                    if (data) {
                        thingHub.server.removeLocationThing(currentLocationId, get_selected_location_thing().val(), get_selected_location_thing().text());
                        add_thing_to_inventory_list(get_selected_location_thing().val(), get_selected_location_thing().text());
                    } else {
                        addTextToStoryBox("<span style='color:red'>Can not take &laquo;" + get_selected_location_thing().text() + "&raquo;</span>");
                    }
                });
            });

            // BUTTON HOOK: DROP INVENTORY ITEM
            $("#btn_cmd_inv_thing_drop").click(function () {
                // Send request om å droppe ting. Om vi får true tilbake, broadcaster vi det til andre i rommet og legger til i ting-i-rommet-listen
                $.get("/api/Things/DropThing/" + get_selected_inventory_thing().val(), function (data) {
                    if (data) {
                        thingHub.server.addLocationThing(currentLocationId, get_selected_inventory_thing().val(), get_selected_inventory_thing().text());
                        remove_thing_from_inventory_list(get_selected_inventory_thing().val());
                    } else {
                        addTextToStoryBox("<span style='color:red'>Could not drop &laquo;" + get_selected_inventory_thing().text() + "&raquo;</span>");
                    }
                });
            });
        });
    });

    $(document).ready(function () {
        get_things_and_refresh_lists($("#currentLocationId").val());
    });
</script>
